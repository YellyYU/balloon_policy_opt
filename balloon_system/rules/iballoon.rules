### Auto-Balloon ###############################################################

(defvar host_mem_pressure (Host.Dd_command "get_hostpressure"))
(def shrink_normal_guest (guest)
{
    (defvar tmp (guest.Dd_policy8_shrink_normal guest))
})
(def shrink_warn_guest (guest)
{
    (defvar tmp (guest.Dd_policy8_shrink_warn))
})
(def grow_critical_guest (guest)
{
    (defvar tmp (guest.Dd_policy8_grow_critical))
})
(def grow_warn_guest (guest)
{
    (defvar tmp (guest.Dd_policy8_grow_warn))
})


### Main script
# Methodology: The goal is to shrink all guests fairly and by an amount
# scaled to the level of host memory pressure.  If the host is under
# severe pressure, scale back more aggressively.  We don't yet handle
# symptoms of over-ballooning guests or try to balloon idle guests more
# aggressively.  When the host is not under memory pressure, slowly
# deflate the balloons.

#(defvar host_free_percent (/ (Host.StatAvg "mem_free") Host.mem_available))
#(with Guests guest (shrink_guest guest))
(with Guests guest (shrink_normal_guest guest))
(with Guests guest (grow_critical_guest guest))
(with Guests guest (grow_warn_guest guest))
(with Guests guest (shrink_warn_guest guest))
